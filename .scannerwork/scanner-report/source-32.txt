<div class="dashboard">
  <!-- Sidebar -->
  <aside class="sidebar">
    <img src="https://i.postimg.cc/Pf25nnXz/Custom-dimensions-192x69-px.png" alt="Logo"/>

    <nav>
      <div class="nav-section">
        <h2 class="nav-title">Menu Principal</h2>
        <a routerLink="/dashboard" routerLinkActive="active" class="nav-item">
          <i class="fas fa-home"></i>
          <span>Tableau de bord</span>
        </a>
        <a class="nav-item" routerLink="/decks">
          <i class="fas fa-layer-group"></i>
          <span>Mes paquets</span>
        </a>

        <a routerLink="/statistics" routerLinkActive="active" class="nav-item">
          <i class="fas fa-chart-bar"></i>
          <span>Statistiques</span>
        </a>
        <a routerLink="/library" routerLinkActive="active" class="nav-item">
          <i class="fas fa-book"></i>
          <span>Bibliothéque</span>
        </a>
        <a routerLink="/setting" routerLinkActive="active" class="nav-item">
          <i class="fas fas fa-cog"></i>
          <span>Paramètres</span>
        </a>
        <div>
          <!-- Autre contenu ici -->

          <!-- Bouton de déconnexion avec icône -->
          <button class="logout-btn" (click)="logout()">
            <i class="fas fa-door-open"></i> Déconnexion
          </button>
        </div>


      </div>
    </nav>
  </aside>

  <!-- Main Content -->
  <main class="main-content">
    <!-- Header -->
    <header class="content-header">
      <div class="search-bar flex items-center space-x-2 p-2 border rounded-lg">
        <!-- Search icon before input -->
        <i class="fas fa-search text-gray-600"></i>

        <!-- Search input -->
        <input
          type="text"
          class="search-input border-none outline-none p-1 text-gray-700"
          placeholder="Rechercher un paquet..."
          [(ngModel)]="searchQuery"
          (ngModelChange)="onSearch()">

        <!-- Search button without icon -->
        <button
          (click)="onSearch()"
          class="bg-blue-500 text-white py-2 px-4 rounded-lg">
        </button>
      </div>




    </header>

    <!-- Stats Cards -->
    <div class="cards-grid animate-fade-in">
      <!-- Cartes à réviser -->
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">
            <i class="fas fa-sync"></i>
            Cartes à réviser
          </h3>
          <span class="badge badge-warning">{{ stats.cardsToReview }}</span>
        </div>
        <div class="card-content">
          <div class="stats-value">{{ stats.cardsToReview }}</div>
          <div class="card-details">
            <div class="review-list">
              <div *ngFor="let flashcard of flashcards | slice:0:3">
                <p class="text-sm" *ngIf="flashcard.nextReviewDate">
                  Prochaine révision: {{ flashcard.nextReviewDate | date:'short' }}
                </p>
              </div>
            </div>
          </div>
          <div class="trend-indicator trend-up">
            <i class="fas fa-arrow-up"></i>
            {{stats.weeklyProgress}}% cette semaine
          </div>
        </div>
      </div>

      <!-- Cartes maîtrisées -->
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">
            <i class="fas fa-check-circle"></i>
            Cartes maîtrisées
          </h3>
          <span class="badge badge-success">{{ stats.masteredCards }}</span>
        </div>
        <div class="card-content">
          <div class="stats-value">{{ stats.masteredCards }}</div>
          <div class="card-details">
            <div class="mastery-info">
              <p class="text-sm">Taux de complétion</p>
              <div class="progress-bar">
                <div class="progress-fill" [style.width.%]="(stats.masteredCards / totalFlashcards) * 100"></div>
              </div>
            </div>
          </div>
          <div class="trend-indicator trend-up">
            <i class="fas fa-arrow-up"></i>
            {{stats.monthlyProgress}}% ce mois
          </div>
        </div>
      </div>

      <!-- Temps d'étude (inchangé) -->
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">
            <i class="fas fa-clock"></i>
            Temps d'étude
          </h3>
        </div>
        <div class="card-content">
          <div class="stats-value">{{stats.studyTime}}</div>
          <div class="trend-indicator" [class.trend-up]="stats.dailyChange > 0" [class.trend-down]="stats.dailyChange < 0">
            <i [class]="stats.dailyChange > 0 ? 'fas fa-arrow-up' : 'fas fa-arrow-down'"></i>
            {{stats.dailyChange}}% aujourd'hui
          </div>
        </div>
      </div>
    </div>
    <div class="deck-list animate-fade-in">
      <h2>Mes Paquets</h2>
      <div class="cards-grid">
        <div class="card deck-card" *ngFor="let deck of decks">
          <div class="card-header">
            <h3 class="card-title">{{ deck.name }}</h3>

          </div>
          <div class="card-content">
            <div class="deck-info">
              <span>{{ deck.lastModified }}</span>
            </div>
            <div class="stats-info">
              <div class="deck-actions">
                <button class="button-secondary" (click)="addCardToDeck(deck)">
                  <i class="fas fa-plus"></i>
                  Ajouter des cartes
                </button>
                <button class="button-primary" (click)="startStudySession(deck)">
                  <i class="fas fa-play"></i>
                  Study
                </button>
                <!-- Bouton de suppression -->
                <button (click)="deleteDeck(deck.id)" class="delete-btn">
                  <i class="fas fa-trash-alt"></i>
                </button>




              </div>
            </div>
            <div class="progress-bar">
              <div class="progress-fill" [style.width.%]="deck.progress"></div>
            </div>

          </div>
        </div>
      </div>
    </div>

    <!-- Creation Section -->
    <div class="create-section animate-fade-in">
      <h2>Créer ou Importer</h2>
      <div class="cards-grid">
        <div class="card create-card" (click)="createNewDeck()">
          <div class="create-card-content">
            <div class="icon-circle">
              <i class="fas fa-plus"></i>
            </div>
            <h3>Créer un nouveau paquet</h3>
            <p>Commencez à zéro avec un nouveau paquet de cartes</p>
          </div>
        </div>

        <div class="card create-card" (click)="importFromLibrary()">
          <div class="create-card-content">
            <div class="icon-circle">
              <i class="fas fa-file-import"></i>
            </div>
            <h3>Importer un paquet</h3>
            <p>Importer un paquet depuis votre ordinateur</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Deck List -->


    <!-- Recent Cards -->


    <!-- Modal -->
    <div class="deck-modal" *ngIf="showNewDeckModal" (click)="closeModal()">
      <div class="deck-modal-content" (click)="$event.stopPropagation()">
        <div class="modal-title">
          <span>Nouveau paquet</span>
          <button class="modal-close" (click)="closeModal()">×</button>
        </div>

        <div class="modal-tabs">
          <button [class.active]="!isImportMode" (click)="setMode(false)">Créer</button>
          <button [class.active]="isImportMode" (click)="setMode(true)">Importer</button>
        </div>

        <!-- Vue Création -->
        <div *ngIf="!isImportMode">
          <p class="modal-description">
            Créez votre propre paquet. Vous déterminerez ensuite le thème, les cartes que vous avez créées, etc.
          </p>

          <input
            type="text"
            class="deck-name-input"
            placeholder="Nom du paquet"
            [(ngModel)]="newDeckName"
          >

          <button
            class="create-deck-btn"
            [disabled]="!newDeckName.trim()"
            (click)="confirmDeckCreation()"
          >
            Créer un nouveau paquet
          </button>
        </div>

        <!-- Vue Importation -->
        <div *ngIf="isImportMode">
          <div class="import-zone"
               (click)="fileInput.click()"
               (dragover)="onDragOver($event)"
               (drop)="onDrop($event)">
            <input
              #fileInput
              type="file"
              accept=".json,.csv"
              (change)="onFileSelected($event)"
              hidden
            >
            <div class="import-content">
              <i class="fas fa-file-upload"></i>
              <p>Cliquez pour sélectionner ou déposez un fichier</p>
              <span>Formats acceptés: .json, .csv</span>
            </div>
          </div>

          <div *ngIf="selectedFile" class="selected-file">
            <i class="fas fa-file"></i>
            <span>{{ selectedFile.name }}</span>
            <button class="remove-file" (click)="removeSelectedFile($event)">×</button>
          </div>

          <button
            class="create-deck-btn"
            [disabled]="!selectedFile"
            (click)="importFile()"
          >
            Importer le paquet
          </button>

        </div>
      </div>
    </div>
  </main>
</div>
